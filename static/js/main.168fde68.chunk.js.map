{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["operators","one","two","ops","numbers","App","props","execute","operation","index","state","length","element","push","parseFloat","console","log","result","setState","prevState","current","toString","handleNum","num","concat","replace","handleDecimal","indexOf","handleOp","op","handleSubmit","numButtons","id","onClick","opKeys","Object","keys","opButtons","className","onSubmit","e","preventDefault","this","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.168fde68.chunk.js","sourcesContent":["import { Component } from 'react';\nimport './App.css';\nfunction add(one, two) {\n  return one + two;\n}\nfunction sub(one, two) {\n  return one - two;\n}\nfunction mul(one, two) {\n  return one*two;\n}\nfunction div(one, two) {\n  if (two === 0.0) {\n    return null;\n  }\n  return one / two;\n}\nconst operators = {\"+\": add, \"-\": sub, \"*\": mul, \"/\": div};\nconst ops = {\"+\": \"add\", \"-\": \"subtract\", \"*\": \"multiply\", \"/\": \"divide\"};\nconst numbers = [\"zero\", \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\", \"eight\", \"nine\"];\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      operation: [],\n      current: \"\"\n    };\n\n    this.numButtons = [];\n    for (let index = 0; index < 10; index++) {\n      this.numButtons.push(<button key={index} id={numbers[index]}\n      onClick={() => this.handleNum(index)}>{index.toString()}</button>)    \n    }\n\n    const opKeys = Object.keys(operators);\n    this.opButtons = [];\n    for (let index = 0; index < opKeys.length; index++) {\n      this.opButtons.push(<button key={opKeys[index]} id={ops[opKeys[index]]}\n      onClick={() => this.handleOp(opKeys[index])}>{opKeys[index]}</button>)      \n    }\n  }\n\n  execute = () => {\n    let operation = [];\n    for (let index = 0; index < this.state.operation.length; index++) {\n      const element = this.state.operation[index]\n      if (operators[element] && operators[this.state.operation[index+1]]) {\n        continue;\n      }\n      if (operators[element]) {\n        if (element === \"-\") {\n          if (operators[this.state.operation[index-1]]) {\n            operation.push(operators[this.state.operation[index-1]]);\n            operation.push(-1*parseFloat(this.state.operation[index+1]));\n            index = index + 2;\n            continue;\n          }\n          else {\n            operation.push(operators[\"-\"]);\n          }\n        }\n        else {\n          operation.push(operators[element]);\n        }\n      }\n      else {\n        operation.push(parseFloat(element));\n      }\n    }\n    console.log(this.state.operation);\n    console.log(operation);\n    let result = 0;\n    for (let index = 1; index < operation.length; index = index + 2) {\n      const element = operation[index];\n      result = element(operation[index-1], operation[index+1]);\n      operation[index+1] = result;\n    }\n    this.setState(prevState => ({\n      operation: [],\n      current: result === null ? \"null\" : result.toString()\n    }));\n  }\n\n  handleNum = (num) => {\n    this.setState(prevState => ({\n      ...prevState,\n      current: prevState.current.concat(num.toString()).replace(/^0+(\\d)/, \"$1\")\n    }));\n  }\n\n  handleDecimal = () => {\n    if(this.state.current.indexOf(\".\") === -1){\n      this.setState(prevState => ({\n        ...prevState,\n        current: prevState.current.concat(\".\")\n      }));\n    }\n  }\n\n  handleOp = (op) => {\n    this.setState(prevState => ({\n      ...prevState,\n      operation: prevState.current !== \"\" ? [...prevState.operation, prevState.current, op]\n      : [...prevState.operation, op],\n      current: \"\"\n    }));\n  }\n\n  handleSubmit = () => {\n    if (this.state.operation.length === 0 && this.state.current === \"null\") {\n      this.setState({\n        operation: [],\n        current: \"\"\n      });\n    }\n    else {\n      this.setState(prevState => ({\n        ...prevState,\n        operation: [...prevState.operation, prevState.current],\n        current: \"\"\n      }),\n      this.execute);\n    }\n  }\n  \n  render() {\n    return (\n      <div className=\"App\">\n        <form onSubmit={(e) => e.preventDefault()}>\n          <p id=\"display\">{this.state.current}</p>\n          {this.numButtons}\n          {this.opButtons}\n          <button onClick={this.handleDecimal} id=\"decimal\">.</button>\n          <button onClick={this.handleSubmit} id=\"equals\">=</button>\n          <button onClick={() => \n          this.setState({operation: [], current: \"0\"})}\n          id=\"clear\">CE</button>\n        </form>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}